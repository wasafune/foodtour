{"version":3,"sources":["contexts/TourContext.js","components/Favorite/index.js","components/Search/index.js","components/Tour/TourCard.js","components/Tour/index.js","components/index.js","App.js","serviceWorker.js","index.js"],"names":["TourContext","createContext","API_ENDPOINT","TourContextProvider","props","useState","tour","setTour","tourInput","setTourInput","tourConfirmed","setTourConfirmed","selected","items","savedTour","setSavedTour","Object","keys","JSON","parse","localStorage","getItem","length","savedTourCount","setSavedTourCount","updateTour","term","location","range","limit","sortBy","a","params","axios","get","data","Provider","value","toggleTourConfirmed","updateSavedTour","setFavoriteTour","name","tourFavorites","setItem","stringify","applyFavoriteTour","tourFavorite","removeFavoriteTour","children","Favorite","classes","useStyles","useContext","favorites","setFavorites","useEffect","favoriteButtons","map","key","i","Box","className","box","MenuItem","onClick","Button","xButton","variant","color","InputLabel","Select","select","label","makeStyles","theme","display","width","SearchForm","setTerm","setLocation","setRange","setLimit","setSortBy","container","onSubmit","event","preventDefault","TextField","textFieldLeft","id","onChange","target","textFieldMain","button","type","boxAdv","flexDirection","justifyContent","backgroundColor","padding","borderRadius","cardContent","boxContainer","TourCard","Card","CardContent","Link","href","url","height","src","imageUrl","Typography","component","rank","Rating","rating","precision","size","readOnly","displayPhone","displayAddress","price","reorder","list","startIndex","endIndex","result","Array","from","splice","removed","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","droppableId","getItemStyle","isDragging","draggableStyle","userSelect","margin","getItemListStyle","isDraggingOver","background","overflow","transition","getSelectedListStyle","boxContainerHidden","boxBottom","textAlign","textField","TourDnd","setItems","setSelected","tourName","setTourName","cardsMapped","obj","content","stateHash","getList","onDragEnd","updatedList","provided","snapshot","ref","innerRef","style","item","draggableId","draggableProps","dragHandleProps","Fade","in","Number","image_url","display_address","display_phone","distance","reviewCount","review_count","placeholder","visibility","boxSearchFull","boxSearchCollapsed","paperSearchFull","paperSearchCollapsed","Main","Container","Paper","elevation","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b94b592e.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react'\nimport axios from 'axios'\n\nexport const TourContext = createContext()\n\n\nconst API_ENDPOINT = 'https://foodtour-api.herokuapp.com'\n\nexport default function TourContextProvider(props) {\n  const [tour, setTour] = useState([])\n  const [tourInput, setTourInput] = useState({})\n  const [tourConfirmed, setTourConfirmed] = useState(false)\n  const [savedTour, setSavedTour] = useState({ selected: [], items: []})\n  const [savedTourCount, setSavedTourCount] = useState(Object.keys(JSON.parse(localStorage.getItem('tourFavorites') || '{}')).length)\n\n  const updateTour = async (term, location, range, limit, sortBy) => {\n    const params = { term, location, range, limit, sortBy }\n    setSavedTour({ selected: [], items: []})\n    const { data } = await axios.get(`${API_ENDPOINT}/search`, {\n      params,\n    })\n    setTour(data)\n    setTourConfirmed(false)\n    setTourInput(params)\n  }\n\n  const toggleTourConfirmed = () => setTourConfirmed(!tourConfirmed)\n\n  const updateSavedTour = (selected, items) => {\n    setSavedTour({ selected, items })\n  }\n\n  const setFavoriteTour = (name) => {\n    let tourFavorites = localStorage.getItem('tourFavorites') || '{}'\n    tourFavorites = JSON.parse(tourFavorites)\n    tourFavorites = {\n      ...tourFavorites,\n      [name]: { savedTour, tourInput, tour },\n    }\n\n    localStorage.setItem('tourFavorites', JSON.stringify(tourFavorites))\n    setSavedTourCount(savedTourCount + 1)\n  }\n\n  const removeFavoriteTour = (name) => {\n    let tourFavorites = localStorage.getItem('tourFavorites') || '{}'\n    tourFavorites = JSON.parse(tourFavorites)\n    tourFavorites = {\n      ...tourFavorites,\n    }\n    delete tourFavorites[name]\n\n    localStorage.setItem('tourFavorites', JSON.stringify(tourFavorites))\n    setSavedTourCount(savedTourCount - 1)\n  }\n\n  const applyFavoriteTour = (name) => {\n    const tourFavorites = localStorage.getItem('tourFavorites')\n    const tourFavorite = JSON.parse(tourFavorites)[name]\n    setTour(tourFavorite.tour)\n    setSavedTour(tourFavorite.savedTour)\n    setTourInput(tourFavorite.tourInput)\n    setTourConfirmed(true)\n  }\n\n  return (\n    <TourContext.Provider value={{\n      tour,\n      tourInput,\n      tourConfirmed,\n      savedTour,\n      updateTour,\n      toggleTourConfirmed,\n      updateSavedTour,\n      setFavoriteTour,\n      applyFavoriteTour,\n      savedTourCount,\n      removeFavoriteTour\n    }}>\n      {props.children}\n    </TourContext.Provider>\n  )\n}\n","import React, { useState, useContext, useEffect } from 'react'\nimport { Box, Button, Select, MenuItem, InputLabel } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { TourContext } from '../../contexts/TourContext'\n\n\nexport default function Favorite() {\n  const classes = useStyles()\n  const { savedTourCount, applyFavoriteTour, removeFavoriteTour } = useContext(TourContext)\n\n  const [favorites, setFavorites] = useState(JSON.parse(localStorage.getItem('tourFavorites') || '{}'))\n\n\n  useEffect(() => {\n    setFavorites(JSON.parse(localStorage.getItem('tourFavorites') || '{}'))\n  }, [savedTourCount])\n\n  const favoriteButtons = Object.keys(favorites).map((key, i) => (\n    <Box className={classes.box} key={`${key}${i}`}>\n      <MenuItem value={key} onClick={() => applyFavoriteTour(key)}>{key}</MenuItem>\n      <Button className={classes.xButton} variant=\"contained\" color=\"primary\" value={key} onClick={() => removeFavoriteTour(key)}>\n        X\n      </Button>\n    </Box>\n  ))\n\n  return (\n    <Box>\n      <InputLabel>Favorites</InputLabel>\n      <Select className={classes.select} value=\"Favorites\" label=\"Favorites\">\n        {favoriteButtons}\n      </Select>\n    </Box>\n  )\n}\n\nconst useStyles = makeStyles(theme => ({\n  box: {\n    display: 'flex',\n  },\n  select: {\n    width: 150,\n  },\n  xButton: {\n    width: 15,\n  },\n}))\n","import React, { useState, useContext, useEffect } from 'react'\nimport { Box, TextField, Button, Select, MenuItem, InputLabel } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { TourContext } from '../../contexts/TourContext'\nimport Favorite from '../Favorite'\n\n\nexport default function SearchForm(props) {\n  const classes = useStyles()\n\n  const { tourInput, updateTour } = useContext(TourContext)\n  const [term, setTerm] = useState('')\n  const [location, setLocation] = useState('')\n  const [range, setRange] = useState(10)\n  const [limit, setLimit] = useState(5)\n  const [sortBy, setSortBy] = useState('rating')\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    updateTour(term, location, range, limit, sortBy)\n  }\n\n  useEffect(() => {\n    if (tourInput.term) {\n      setTerm(tourInput.term)\n      setLocation(tourInput.location)\n      setRange(tourInput.range)\n      setLimit(tourInput.limit)\n      setSortBy(tourInput.sortBy)\n    }\n  }, [tourInput])\n\n  return (\n    <form className={classes.container} onSubmit={handleSubmit}>\n      <Box className={classes.box}>\n        <TextField className={classes.textFieldLeft} id=\"term-field\" label=\"Find...\" value={term} onChange={event => setTerm(event.target.value)}/>\n        <TextField className={classes.textFieldMain} id=\"location-field\" label=\"Location\" value={location} onChange={event => setLocation(event.target.value)}/>\n        <Button className={classes.button} variant=\"contained\" color=\"primary\" type=\"submit\">\n          Search\n        </Button>\n      </Box>\n      <Box className={classes.boxAdv}>\n        <Box>\n          <InputLabel>Search Radius</InputLabel>\n          <Select className={classes.select} value={range} label=\"Search Radius\" onChange={event => setRange(event.target.value)}>\n            <MenuItem value={5}>5</MenuItem>\n            <MenuItem value={10}>10</MenuItem>\n            <MenuItem value={15}>15</MenuItem>\n            <MenuItem value={20}>20</MenuItem>\n          </Select>\n        </Box>\n        <Box>\n          <InputLabel>Number of Results</InputLabel>\n          <Select className={classes.select} value={limit} label=\"Number of Results\" onChange={event => setLimit(event.target.value)}>\n            <MenuItem value={5}>5</MenuItem>\n            <MenuItem value={10}>10</MenuItem>\n            <MenuItem value={15}>15</MenuItem>\n            <MenuItem value={20}>20</MenuItem>\n          </Select>\n        </Box>\n        <Box>\n          <InputLabel>Sort By</InputLabel>\n          <Select className={classes.select} value={sortBy} label=\"Sort By\" onChange={event => setSortBy(event.target.value)}>\n            <MenuItem value={'rating'}>Rating</MenuItem>\n            <MenuItem value={'distance'}>Distance</MenuItem>\n            <MenuItem value={'name'}>Name</MenuItem>\n          </Select>\n        </Box>\n        <Favorite />\n      </Box>\n    </form>\n  )\n}\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  box: {\n    backgroundColor: 'white',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  boxAdv: {\n    padding: '6px 0 0 0',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  textFieldLeft: {\n    width: 300,\n    padding: '0 0 0 7px',\n  },\n  textFieldMain: {\n    width: 300,\n    padding: '0 0 0 0',\n  },\n  button: {\n    borderRadius: 0,\n  },\n  select: {\n    width: 150,\n  },\n}))\n","import React from 'react'\nimport {\n  Box,\n  Card,\n  CardContent,\n  Link,\n  Typography,\n} from '@material-ui/core'\nimport Rating from '@material-ui/lab/Rating'\nimport { makeStyles } from '@material-ui/core/styles'\n\n\nconst useStyles = makeStyles({\n  cardContent: {\n    display: 'flex',\n  },\n  boxContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '30vw',\n  },\n  box: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '10px',\n  },\n})\n\nexport default function TourCard(props) {\n  const classes = useStyles()\n\n  return (\n    <Card>\n      <CardContent className={classes.cardContent}>\n        <Link href={props.url}>\n          <img width=\"130px\" height=\"130px\" src={props.imageUrl}></img>\n        </Link>\n        <Box className={classes.boxContainer}>\n          <Box className={classes.box}>\n            <Typography component=\"h4\">\n              {props.rank}: <Link href={props.url}>{props.name}</Link>\n            </Typography>\n            <Rating value={props.rating} precision={0.5} size=\"small\" readOnly/>\n            <Typography component=\"h5\">\n              {props.displayPhone}\n            </Typography>\n            <Typography component=\"h5\">\n              {props.displayAddress}\n            </Typography>\n            <Typography component=\"h5\">\n              {props.price}\n            </Typography>\n          </Box>\n        </Box>\n      </CardContent>\n    </Card>\n  )\n}\n","// This component is heavily based on beautiful dnd's multi list example\nimport React, { useState, useEffect, useContext } from 'react'\nimport { Box, Button, TextField, Fade } from '@material-ui/core'\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\nimport { makeStyles } from '@material-ui/core/styles'\n\n\nimport { TourContext } from '../../contexts/TourContext'\nimport TourCard from './TourCard'\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list)\n  const [removed] = result.splice(startIndex, 1)\n  result.splice(endIndex, 0, removed)\n\n  return result\n}\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n  const sourceClone = Array.from(source)\n  const destClone = Array.from(destination)\n  const [removed] = sourceClone.splice(droppableSource.index, 1)\n\n  destClone.splice(droppableDestination.index, 0, removed)\n\n  const result = {}\n  result[droppableSource.droppableId] = sourceClone\n  result[droppableDestination.droppableId] = destClone\n\n  return result\n}\n\nconst grid = 4\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: 'none',\n  padding: grid,\n  margin: '0',\n  // styles we need to apply on draggables\n  ...draggableStyle,\n})\n\nconst getItemListStyle = (isDraggingOver, tourConfirmed) => ({\n  background: isDraggingOver ? 'lightblue' : '#ff8080',\n  padding: grid,\n  width:  tourConfirmed ? 0 : '50%',\n  height: 650,\n  overflow: 'auto',\n  transition: '1s'\n})\nconst getSelectedListStyle = (isDraggingOver, tourConfirmed) => ({\n  background: isDraggingOver ? 'lightgreen' : 'lightgreen',\n  padding: grid,\n  width: tourConfirmed ? '100%' : '50%',\n  height: 650,\n  overflow: 'auto',\n  transition: '1s',\n})\n\nconst useStyles = makeStyles(theme => ({\n  box: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  boxContainerHidden: {\n    display: 'none',\n  },\n  boxBottom: {\n    textAlign: 'center',\n    padding: '12px 0 0 0',\n  },\n  textField: {\n    backgroundColor: 'white',\n    width: 260,\n    margin: '6px 0',\n  },\n}))\n\n\nexport default function TourDnd() {\n  const classes = useStyles()\n\n  const {\n    tour,\n    tourConfirmed,\n    savedTour,\n    toggleTourConfirmed,\n    updateSavedTour,\n    setFavoriteTour,\n  } = useContext(TourContext)\n\n\n  const [items, setItems] = useState([])\n  const [selected, setSelected] = useState([])\n  const [tourName, setTourName] = useState('')\n\n  useEffect(() => {\n    if (savedTour.selected.length) {\n      setItems(savedTour.items)\n      setSelected(savedTour.selected)\n      return\n    }\n    const cardsMapped = tour\n      ? tour.map((obj, i) => ({ id: `${i}`, content: obj }))\n      : []\n    setItems(cardsMapped)\n    setSelected([])\n  }, [tour, savedTour])\n\n   const stateHash = {\n     items,\n     selected,\n   }\n  const getList = id => stateHash[id]\n\n  const onDragEnd = result => {\n    const { source, destination } = result\n\n    // dropped outside the list\n    if (!destination) {\n      return\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      const updatedList = reorder(\n          getList(source.droppableId),\n          source.index,\n          destination.index\n      )\n      const setter = source.droppableId === 'items' ? setItems : setSelected\n\n      setter(updatedList)\n    } else {\n      const result = move(\n        getList(source.droppableId),\n        getList(destination.droppableId),\n        source,\n        destination,\n      )\n\n      setItems(result.items)\n      setSelected(result.selected)\n    }\n  }\n\n  const handleConfirmClick = () => {\n    toggleTourConfirmed()\n    if (!tourConfirmed) updateSavedTour(selected, items)\n  }\n\n  // Normally you would want to split things out into separate components.\n  // But in this example everything is just done in one place for simplicity\n  return (\n    <Box className={tour.length ? \"\" : classes.boxContainerHidden}>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Box className={classes.box}>\n          <Droppable droppableId=\"selected\">\n            {(provided, snapshot) => (\n              <div\n                ref={provided.innerRef}\n                style={getSelectedListStyle(snapshot.isDraggingOver, tourConfirmed)}>\n                {selected.map((item, index) => (\n                  <Draggable\n                    key={item.id}\n                    draggableId={item.id}\n                    index={index}>\n                    {(provided, snapshot) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={getItemStyle(\n                          snapshot.isDragging,\n                          provided.draggableProps.style\n                        )}>\n                          <Fade in={true}>\n                            <Box>\n                              <TourCard\n                                key={item.content.id}\n                                rank={Number(item.id) + 1}\n                                name={item.content.name}\n                                url={item.content.url}\n                                imageUrl={item.content.image_url}\n                                rating={item.content.rating}\n                                displayAddress={item.content.location.display_address}\n                                displayPhone={item.content.display_phone}\n                                distance={item.content.distance}\n                                price={item.content.price}\n                                reviewCount={item.content.review_count}\n                              />\n                            </Box>\n                          </Fade>\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n          <Droppable droppableId=\"items\">\n            {(provided, snapshot) => (\n              <div\n                ref={provided.innerRef}\n                style={getItemListStyle(snapshot.isDraggingOver, tourConfirmed)}>\n                {items.map((item, index) => (\n                  <Draggable\n                    key={item.id}\n                    draggableId={item.id}\n                    index={index}>\n                    {(provided, snapshot) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={getItemStyle(\n                          snapshot.isDragging,\n                          provided.draggableProps.style\n                        )}>\n                          <Fade in={true}>\n                            <Box>\n                              <TourCard\n                                key={item.content.id}\n                                rank={Number(item.id) + 1}\n                                name={item.content.name}\n                                url={item.content.url}\n                                imageUrl={item.content.image_url}\n                                rating={item.content.rating}\n                                displayAddress={item.content.location.display_address}\n                                displayPhone={item.content.display_phone}\n                                distance={item.content.distance}\n                                price={item.content.price}\n                                reviewCount={item.content.review_count}\n                              />\n                            </Box>\n                          </Fade>\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </Box>\n      </DragDropContext>\n      <Box className={classes.boxBottom}>\n        <Button variant=\"contained\" color=\"primary\" onClick={handleConfirmClick}>{tourConfirmed ? \"Back to Edit\" : \"Confirm Tour!\"}</Button>\n        <Box visibility={tourConfirmed ? \"visible\" : \"hidden\"}>\n          <TextField className={classes.textField} id=\"term-field\" label=\"Cool tour name here!\" value={tourName} onChange={event => setTourName(event.target.value)}/>\n          <Box>\n            <Button variant=\"contained\" color=\"primary\">Download</Button>\n            <Button variant=\"contained\" color=\"primary\" onClick={() => setFavoriteTour(tourName)}>Favorite</Button>\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n","import React, { useContext } from 'react'\nimport { Container, Paper, Box } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport Search from './Search'\nimport Tour from './Tour'\n\nimport { TourContext } from '../contexts/TourContext'\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: 0,\n    height: '100vh',\n    backgroundColor: 'teal',\n  },\n  boxSearchFull: {\n    display: 'flex',\n    height: '100vh',\n    justifyContent: 'center',\n    flexDirection: 'row',\n    transition: '1s',\n    background: 'teal',\n    padding: '6px 0',\n  },\n  boxSearchCollapsed: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'row',\n    transition: '1s',\n    background: '#f4efef',\n    padding: '6px 0',\n  },\n  paperSearchFull: {\n    display: 'flex',\n    margin: '25vh 0 0 0',\n    height: 400,\n    width: 900,\n    justifyContent: 'center',\n    transition: '1s',\n    background: '#f4efef',\n  },\n  paperSearchCollapsed: {\n    display: 'flex',\n    width: 900,\n    justifyContent: 'center',\n    background: '#f4efef',\n    transition: '1s',\n  },\n}))\n\n\nexport default function Main(props) {\n  const classes = useStyles()\n\n  const { tour } = useContext(TourContext)\n\n\n  return (\n    <Container className={classes.container}>\n      <Box className={tour.length ? classes.boxSearchCollapsed: classes.boxSearchFull}>\n        <Paper elevation={tour.length ? 0 : 3} className={tour.length ? classes.paperSearchCollapsed: classes.paperSearchFull}>\n          <Search />\n        </Paper>\n      </Box>\n      <Tour />\n    </Container>\n  )\n}\n","import React from 'react'\n\nimport './App.css'\n\nimport Main from './components'\nimport TourContextProvider from './contexts/TourContext'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TourContextProvider>\n        <Main />\n      </TourContextProvider>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}